{"version":3,"sources":["assets/subheader-image.png","assets/cent-invest-logo.svg","model/types.ts","components/car-appraiser-form.tsx","utils/utils.ts","components/flat-appraiser-form.tsx","components/property-appraiser-form.tsx","components/app.tsx","index.tsx"],"names":["module","exports","_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","PropertyAppraiserFormMode","_ref","svgRef","title","props","createElement","id","x","y","viewBox","enableBackground","xmlSpace","ref","fill","points","d","width","height","ForwardRef","forwardRef","StyledFormItem","styled","Form","Item","InlineContainer","div","Label","span","CarAppraiserForm","getDataFromPath","setFormValues","onChangeHandler","useState","carBrands","setCarBrands","undefined","selectedCarBrand","setSelectedCarBrand","carModels","setCarModels","selectedCarModel","setSelectedCarModel","fuelTypesArray","useMemo","label","value","transmissionTypesArray","driveTypesArray","bodyTypesArray","useEffect","then","response","data","map","element","brand","catch","error","console","log","message","model","prevFormValues","car","placeholder","options","filterOption","onChange","newSelectedCarBrand","find","disabled","disabledDate","current","moment","endOf","year","picker","min","max","optionLabelProp","SwitchLabel","StyledSwitch","Switch","FlatAppraiserForm","areas","setAreas","selectedArea","setSelectedArea","isNotMiddleFloor","setIsNotMiddleFloor","name","flat","sub_area","is_middle_floor","newSelectedArea","build_year","checked","serverUrl","require","Container","ResultWrapper","PropertyAppraiserForm","mode","mileage","body_type","fuel_type","engine_volume","engine_power","transmission_type","drive_type","owners_count","total_space","living_space","num_room","kitchen_space","metro_min_walk","kremlin_km","formValues","isLoading","setLoading","resultValue","setResultValue","useCallback","path","a","axios","get","postDataToPath","post","parameter","entity","CAR","style","backgroundColor","borderColor","marginRight","type","onClick","price","spinning","Intl","NumberFormat","currency","maximumFractionDigits","format","FormWrapper","Header","SubHeader","InfoPanel","InfoPanelTitle","InfoPanelText","ImageWrapper","StyledLogo","CentInvestLogo","StyledRadioButton","Radio","Button","App","setMode","event","Group","size","defaultValue","src","subHeaderImage","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22e0aee5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/subheader-image.8c1e5752.png\";","var _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgCentInvestLogo = function SvgCentInvestLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"\\\\u0421\\\\u043B\\\\u043E\\\\u0439_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 358.68 595.28 124.531\",\n    enableBackground: \"new 0 358.68 595.28 124.531\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"#50B848\",\n    points: \"52.903,358.68 52.903,386.87 75.843,358.68  \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M3.507,372.092c1.6-2.572,3.319-4.601,5.699-6.508l1.807-1.227c1.708-0.929,3.254-1.547,5.164-2.022 c1.157-0.207,2.223-0.32,3.415-0.359c1.593,0.053,2.957,0.253,4.505,0.635c1.086,0.347,2.069,0.736,3.1,1.225 c2.342,1.292,4.123,2.746,5.916,4.714l1.347,1.701c1.976,2.893,3.254,5.759,4.197,9.107l0.51,2.276 c0.067,0.363,0.123,0.724,0.168,1.071V358.68H0v24.09c0.488-2.657,1.27-6.146,2.469-8.731L3.507,372.092z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M92.241,362.576l-39.338,48.345v10.969c0.046-0.354,0.106-0.71,0.166-1.069l0.508-2.272 c0.946-3.35,2.226-6.219,4.199-9.113l1.347-1.708c1.535-1.668,3.027-2.96,4.955-4.171c0.992-0.554,1.956-1.006,2.994-1.427 c2.317-0.729,4.298-1.011,6.743-0.938l2.264,0.33c1.894,0.474,3.441,1.092,5.141,2.034c0.944,0.582,1.795,1.199,2.659,1.889 c2.558,2.296,4.339,4.738,5.898,7.78l0.891,2.05c0.719,1.935,1.234,4.78,1.574,6.695C92.241,421.97,92.241,362.576,92.241,362.576 z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M72.649,442.592c-5.55,0-10.072-7.085-10.072-15.782c0-8.692,4.522-15.777,10.072-15.777 c5.557,0,10.084,7.085,10.084,15.777C82.733,435.507,78.206,442.592,72.649,442.592L72.649,442.592z M72.649,406.917 c-7.862,0-14.269,8.933-14.269,19.893c0,10.96,6.408,19.9,14.269,19.9c7.858,0,14.275-8.94,14.275-19.9 C86.93,415.855,80.507,406.917,72.649,406.917z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M53.577,435.084l-0.508-2.282c-0.06-0.361-0.12-0.715-0.166-1.063v24.03h39.338v-23.911 c-0.496,2.664-1.273,5.959-2.465,8.55l-1.051,1.95c-1.6,2.563-3.314,4.584-5.691,6.5l-1.815,1.22 c-1.701,0.941-3.247,1.552-5.141,2.027c-1.174,0.207-2.243,0.322-3.429,0.361c-1.588-0.053-2.96-0.246-4.507-0.635 c-1.085-0.349-2.07-0.739-3.1-1.22c-2.342-1.3-4.125-2.75-5.92-4.715l-1.347-1.713C55.803,441.3,54.53,438.426,53.577,435.084z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M39.337,392.555c-0.044,0.354-0.101,0.708-0.168,1.071l-0.51,2.274c-0.943,3.35-2.221,6.221-4.197,9.107 l-1.348,1.709c-1.526,1.666-3.032,2.957-4.962,4.176c-0.982,0.542-1.942,0.997-2.992,1.42c-2.325,0.736-4.286,1.018-6.729,0.929 l-2.255-0.313c-1.909-0.476-3.456-1.093-5.164-2.036c-0.939-0.589-1.788-1.206-2.652-1.894c-2.565-2.303-4.339-4.729-5.893-7.78 c-1.242-2.854-1.913-5.545-2.467-8.625v59.273l39.337-48.331V392.555z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M19.592,403.406c-5.552,0-10.086-7.082-10.086-15.773c0-8.692,4.534-15.79,10.086-15.79 c5.544,0,10.062,7.099,10.062,15.79C29.654,396.324,25.136,403.406,19.592,403.406L19.592,403.406z M19.592,367.739 c-7.862,0-14.276,8.931-14.276,19.893c0,10.954,6.414,19.886,14.276,19.886c7.853,0,14.261-8.933,14.261-19.886 C33.853,376.671,27.445,367.739,19.592,367.739z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"#50B848\",\n    points: \"39.337,427.587 16.396,455.77 39.337,455.77  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"#50B848\",\n    points: \"91.102,358.68 80.047,358.68 1.184,455.77 12.076,455.77  \"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 42.765,\n    y: 449.087,\n    fill: \"#50B848\",\n    width: 6.748,\n    height: 6.683\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M95.643,449.087v6.683c4.611,0,8.358,3.696,8.358,8.254c0,4.561-3.747,8.257-8.358,8.257 c-3.395,0-6.497-0.761-12.942-2.344c-12.488-3.059-27.863-6.835-40.177-9.855c-22.13-5.424-42.432,0.729-42.517,15.106h6.746 c0-5.345,10.353-8.892,32.524-3.461c19.176,4.705,26.388,6.474,40.83,10.016c9.535,2.337,17.351,1.774,22.968-0.903l0.021,0.021 c5.617-2.727,9.479-8.438,9.479-15.031C112.576,456.579,104.99,449.087,95.643,449.087z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 328.126,\n    y: 431.674,\n    fill: \"#50B848\",\n    width: 19.777,\n    height: 9.248\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M433.594,425.534h-18.689v-18.266h-10.481v48.502h10.481v-21.026h18.689v21.026h10.483v-48.502h-10.483 L433.594,425.534L433.594,425.534z M363.751,437.796v-30.529H353.27v48.502h8.052l24.374-30.669v30.669h10.483v-48.502h-8.163 L363.751,437.796L363.751,437.796z M548.295,406.205c-6.834-0.003-12.906,1.815-17.782,6.406 c-4.154,3.853-7.78,10.196-7.78,18.945c-0.01,7.063,2.197,13.173,7.776,18.513c4.038,3.839,9.287,6.775,17.714,6.763 c5.206,0,9.077-1.307,11.98-2.833l0.341-0.181v-12.887l-1.122,1.326c-2.654,3.124-6.36,4.941-10.56,4.945 c-3.814,0-7.665-1.367-10.546-3.976c-2.878-2.614-4.813-6.455-4.818-11.528c0-4.204,1.49-8.178,4.106-11.087 c2.613-2.909,6.336-4.768,10.904-4.772c1.62,0.003,6.774,0.332,10.918,5.092l1.119,1.287v-12.849l-0.33-0.181 C555.788,406.79,551.693,406.205,548.295,406.205L548.295,406.205z M312.541,427.72c-1.779,1.336-3.851,1.357-5.627,1.355h-3.116 v-12.601h2.549c2.169-0.003,4.428,0.159,6.135,1.365c1.211,0.9,2.354,2.464,2.356,4.864 C314.842,424.584,314.058,426.519,312.541,427.72L312.541,427.72z M320.574,411.037c-1.802-1.583-3.699-2.542-5.802-3.083 c-2.104-0.546-4.404-0.686-7.082-0.686h-14.375v48.502h10.481v-17.488h5.311c5.567,0.003,9.658-1.603,12.416-4.365 c3.81-3.831,4.077-9.099,4.081-11c0-3.513-1.023-8.315-5.027-11.877L320.574,411.037L320.574,411.037z M563.561,407.268v9.207 h10.62v39.296h10.485v-39.296h10.615v-9.207H563.561L563.561,407.268z M179.466,455.77h27.475v-9.207h-16.995v-11.609h16.287 v-9.207h-16.287v-9.273h16.995v-9.207h-27.475V455.77L179.466,455.77z M474.149,443.545c-0.397,0.862-1.03,1.651-2.046,2.26 c-1.855,1.095-4.296,1.187-5.975,1.182h-3.326v-11.749h2.76c1.98-0.005,4.228,0.017,6.031,0.861l0.027,0.012l-0.021-0.009 c1.359,0.618,2.101,1.466,2.541,2.341c0.436,0.873,0.553,1.786,0.553,2.459C474.693,441.749,474.545,442.684,474.149,443.545 L474.149,443.545z M462.801,416.05h2.051c1.788,0,3.429,0.394,4.572,1.234c1.139,0.842,1.86,2.079,1.872,4.077 c-0.003,1.403-0.33,2.404-0.816,3.15c-0.725,1.117-1.858,1.713-2.986,2.033c-1.122,0.315-2.202,0.337-2.712,0.337h-1.981 L462.801,416.05L462.801,416.05z M476.885,429.633c0.626-0.464,1.336-1.083,2.01-1.93c1.246-1.562,2.318-3.865,2.315-7.053 c-0.003-4.137-1.69-8.002-4.64-10.276c-4.05-3.136-9.301-3.097-11.931-3.107h-12.321v48.502h16.499 c4.171,0.003,8.68-0.72,12.386-3.981c3.444-3.073,4.252-7.171,4.252-10.038c-0.003-2.566-0.578-6.437-3.6-9.314 C480.813,431.449,479.251,430.292,476.885,429.633L476.885,429.633z M491.139,455.77h27.476v-9.207H501.62v-11.609h16.287v-9.207 H501.62v-9.273h16.995v-9.207h-27.476V455.77L491.139,455.77z M169.417,407.268h-10.483v39.296H141.52v-39.296h-10.481v48.502 h34.269v10.62h9.771v-19.827h-5.662V407.268L169.417,407.268z M242.939,425.534h-18.69v-18.266h-10.481v48.502h10.481v-21.026 h18.69v21.026h10.481v-48.502h-10.481V425.534L242.939,425.534z M257.506,416.474h10.623v39.296h10.48v-39.296h10.62v-9.207 h-31.721v9.207H257.506z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#50B848\",\n    d: \"M223.039,373.266h-14.56V358.77h-8.586v38.76h8.586v-16.689h14.56v16.687h8.589V358.77h-8.589V373.266 L223.039,373.266z M173.19,382.424l4.442-11.101l4.346,11.101H173.19L173.19,382.424z M174.181,358.77l-16.449,38.76h9.32 l3.314-7.867h14.263l3.314,7.867h9.251l-15.992-38.76H174.181L174.181,358.77z M253.981,376.737l16.453-17.967h-10.966 l-12.83,14.769V358.77h-8.586v38.76h8.586v-16.335l0.144-0.142l13.063,16.478h11.339L253.981,376.737L253.981,376.737z  M147.7,388.485c-0.845,0.802-2.404,1.468-5.234,1.468l-2.842,0.002v-8.719h2.955c2.681,0.002,4.207,0.66,5.068,1.49 c0.859,0.833,1.141,1.911,1.145,2.982C148.787,386.669,148.545,387.684,147.7,388.485L147.7,388.485z M153.851,376.857 L153.851,376.857c-3.109-2.743-6.94-3.196-9.811-3.196h-4.414v-7.314h14.382v-7.576h-22.97v38.76h13.056 c1.663-0.002,3.709-0.127,5.74-0.792c2.029-0.66,4.05-1.88,5.571-4.033l0.01-0.014l-0.007,0.01 c1.364-1.959,2.193-4.39,2.193-7.054C157.605,381.94,156.122,378.885,153.851,376.857z\"\n  })))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCentInvestLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/cent-invest-logo.20b420ba.svg\";\nexport { ForwardRef as ReactComponent };","export interface Flat {\r\n    readonly total_space: number[];\r\n    readonly living_space: number[];\r\n    readonly is_middle_floor: number[];\r\n    readonly build_year: number[];\r\n    readonly num_room: number[];\r\n    readonly kitchen_space: number[];\r\n    readonly sub_area: number[];\r\n    readonly metro_min_walk: number[];\r\n    readonly kremlin_km: number[];\r\n}\r\n\r\nexport interface Car {\r\n    readonly brand: number[];\r\n    readonly model: number[];\r\n    readonly year: number[];\r\n    readonly mileage: number[];\r\n    readonly body_type: number[];\r\n    readonly fuel_type: number[];\r\n    readonly engine_volume: number[];\r\n    readonly engine_power: number[];\r\n    readonly transmission_type: number[];\r\n    readonly drive_type: number[];\r\n    readonly owners_count: number[];\r\n}\r\n\r\nexport type PropertyAppraiserFormModeType = 'car' | 'flat';\r\n\r\nexport enum PropertyAppraiserFormMode {\r\n    CAR = 'car',\r\n    FLAT = 'flat'\r\n}\r\n\r\nexport interface CarBrand {\r\n    readonly brand: string;\r\n    readonly id: number;\r\n}\r\n\r\nexport interface CarModel {\r\n    readonly model: string;\r\n    readonly id: number;\r\n}\r\n\r\nexport interface Area {\r\n    readonly name: string;\r\n    readonly id: number;\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AutoComplete, DatePicker, Form, InputNumber, Select } from 'antd';\r\nimport { AxiosResponse } from 'axios';\r\nimport moment from 'moment';\r\nimport { CarBrand, CarModel } from '../model/types';\r\nimport { formatCarBrands, formatCarModels } from '../utils/utils';\r\n\r\ninterface CarAppraiserFormProps {\r\n    getDataFromPath: (path: string) => Promise<AxiosResponse<any>>;\r\n    setFormValues: Function;\r\n    onChangeHandler: (value: any, parameter: string) => void;\r\n}\r\n\r\nconst CarAppraiserForm = ({\r\n    getDataFromPath,\r\n    setFormValues,\r\n    onChangeHandler\r\n}: CarAppraiserFormProps) => {\r\n    const [carBrands, setCarBrands] = useState<CarBrand[] | null>(null);\r\n    const [selectedCarBrand, setSelectedCarBrand] = useState<\r\n        CarBrand | undefined\r\n    >(undefined);\r\n    const [carModels, setCarModels] = useState<CarModel[] | null>(null);\r\n    const [selectedCarModel, setSelectedCarModel] = useState<\r\n        CarModel | undefined\r\n    >(undefined);\r\n\r\n    const fuelTypesArray = useMemo(\r\n        () => [\r\n            {\r\n                label: 'Бензин',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'Газ',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'Дизель',\r\n                value: 3\r\n            },\r\n            {\r\n                label: 'Гибрид',\r\n                value: 4\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    const transmissionTypesArray = useMemo(\r\n        () => [\r\n            {\r\n                label: 'АКПП',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'МКПП',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'Вариатор',\r\n                value: 3\r\n            },\r\n            {\r\n                label: 'Робот',\r\n                value: 4\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    const driveTypesArray = useMemo(\r\n        () => [\r\n            {\r\n                label: 'Передний',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'Задний',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'Полный',\r\n                value: 3\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    const bodyTypesArray = useMemo(\r\n        () => [\r\n            {\r\n                label: 'Седан',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'Универсал',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'Внедорожник',\r\n                value: 3\r\n            },\r\n            {\r\n                label: 'Хэтчбэк 3-дверный',\r\n                value: 4\r\n            },\r\n            {\r\n                label: 'Хэтчбэк 4-дверный',\r\n                value: 5\r\n            },\r\n            {\r\n                label: 'Хэтчбэк 5-дверный',\r\n                value: 6\r\n            },\r\n            {\r\n                label: 'Пикап',\r\n                value: 7\r\n            },\r\n            {\r\n                label: 'Купе',\r\n                value: 8\r\n            },\r\n            {\r\n                label: 'Фастбэк',\r\n                value: 9\r\n            },\r\n            {\r\n                label: 'Кабриолет',\r\n                value: 10\r\n            },\r\n            {\r\n                label: 'Минивэн',\r\n                value: 11\r\n            },\r\n            {\r\n                label: 'Фургон',\r\n                value: 12\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        !carBrands &&\r\n            getDataFromPath('api/car/brands')\r\n                .then((response) =>\r\n                    setCarBrands(formatCarBrands(response.data))\r\n                )\r\n                .catch((error) => console.log(error.response.message));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        selectedCarBrand &&\r\n            getDataFromPath(`api/car/models?brand=${selectedCarBrand.brand}`)\r\n                .then((response) =>\r\n                    setCarModels(formatCarModels(response.data))\r\n                )\r\n                .catch((error) => console.log(error.response.message));\r\n    }, [getDataFromPath, selectedCarBrand]);\r\n\r\n    useEffect(() => {\r\n        setFormValues((prevFormValues: any) => ({\r\n            ...prevFormValues,\r\n            car: {\r\n                ...prevFormValues.car,\r\n                brand: [selectedCarBrand ? selectedCarBrand.id : 0]\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedCarBrand]);\r\n\r\n    useEffect(() => {\r\n        setFormValues((prevFormValues: any) => ({\r\n            ...prevFormValues,\r\n            car: {\r\n                ...prevFormValues.car,\r\n                model: [selectedCarModel ? selectedCarModel.id : 0]\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedCarModel]);\r\n\r\n    return (\r\n        <>\r\n            <StyledFormItem>\r\n                <Label>Марка</Label>\r\n                <AutoComplete\r\n                    placeholder=\"Выберите марку автомобиля\"\r\n                    options={carBrands?.map((element: CarBrand) => ({\r\n                        value: element.brand\r\n                    }))}\r\n                    filterOption\r\n                    onChange={(value: string) => {\r\n                        const newSelectedCarBrand = carBrands?.find(\r\n                            (element) => element.brand === value\r\n                        );\r\n                        setSelectedCarBrand(newSelectedCarBrand);\r\n                        !newSelectedCarBrand &&\r\n                            setSelectedCarModel({ model: '', id: 0 });\r\n                    }}\r\n                />\r\n            </StyledFormItem>\r\n            <StyledFormItem>\r\n                <Label>Модель</Label>\r\n                <AutoComplete\r\n                    placeholder=\"Выберите модель\"\r\n                    disabled={!selectedCarBrand}\r\n                    filterOption\r\n                    value={selectedCarModel?.model}\r\n                    options={carModels?.map((element: CarModel) => ({\r\n                        value: element.model\r\n                    }))}\r\n                    onChange={(value: string) => {\r\n                        setSelectedCarModel(\r\n                            carModels?.find(\r\n                                (element) => element.model === value\r\n                            )\r\n                        );\r\n                    }}\r\n                />\r\n            </StyledFormItem>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Год выпуска</Label>\r\n                    <DatePicker\r\n                        disabledDate={(current) =>\r\n                            current && current > moment().endOf('year')\r\n                        }\r\n                        placeholder=\"Укажите год выпуска\"\r\n                        onChange={(value) => {\r\n                            value &&\r\n                                setFormValues((prevFormValues: any) => ({\r\n                                    ...prevFormValues,\r\n                                    car: {\r\n                                        ...prevFormValues.car,\r\n                                        year: [+value.year()]\r\n                                    }\r\n                                }));\r\n                        }}\r\n                        picker=\"year\"\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Пробег, км</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите пробег\"\r\n                        min={1}\r\n                        max={999999}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'mileage');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Число владельцев</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите число владельцев\"\r\n                        min={1}\r\n                        max={10}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'owners_count');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Объем двигателя, л</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите объем двигателя\"\r\n                        min={0.5}\r\n                        max={9}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'engine_volume');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Мощность двигателя, л.с.</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите мощность двигателя\"\r\n                        min={18}\r\n                        max={720}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'engine_power');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Тип кузова</Label>\r\n                    <Select\r\n                        placeholder=\"Выберите тип кузова\"\r\n                        optionLabelProp=\"label\"\r\n                        options={bodyTypesArray}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'body_type');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Тип топлива</Label>\r\n                    <Select\r\n                        placeholder=\"Выберите тип топлива\"\r\n                        optionLabelProp=\"label\"\r\n                        options={fuelTypesArray}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'fuel_type');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Коробка передач</Label>\r\n                    <Select\r\n                        placeholder=\"Выберите коробку передач\"\r\n                        optionLabelProp=\"label\"\r\n                        options={transmissionTypesArray}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'transmission_type');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Привод</Label>\r\n                    <Select\r\n                        placeholder=\"Выберите привод\"\r\n                        optionLabelProp=\"label\"\r\n                        options={driveTypesArray}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'drive_type');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nconst StyledFormItem = styled(Form.Item)`\r\n    flex: 1;\r\n    .ant-form-item-control-input-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .ant-input-number {\r\n        width: 100%;\r\n    }\r\n    .ant-select-selector,\r\n    .ant-picker,\r\n    .ant-input,\r\n    .ant-input-number {\r\n        margin-top: 6px;\r\n    }\r\n`;\r\n\r\nconst InlineContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .ant-form-item:not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nconst Label = styled.span`\r\n    font-size: 16px;\r\n`;\r\n\r\nexport default CarAppraiserForm;\r\n","const formatCarBrands = (carBrandsArray: any) => {\r\n    return carBrandsArray.map((element: (string | number)[]) => ({\r\n        brand: element[0],\r\n        id: element[1]\r\n    }));\r\n};\r\n\r\nconst formatCarModels = (carModelsArray: any) => {\r\n    return carModelsArray.map((element: (string | number)[]) => ({\r\n        model: element[0],\r\n        id: element[1]\r\n    }));\r\n};\r\n\r\nconst formatFlatAreas = (areasArray: any) => {\r\n    return areasArray.map((element: (string | number)[]) => ({\r\n        name: element[0],\r\n        id: element[1]\r\n    }));\r\n};\r\n\r\nexport { formatCarBrands, formatCarModels, formatFlatAreas };\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AutoComplete, DatePicker, Form, InputNumber, Switch } from 'antd';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Area } from '../model/types';\r\nimport { formatFlatAreas } from '../utils/utils';\r\n\r\ninterface FlatAppraiserFormProps {\r\n    getDataFromPath: (path: string) => Promise<AxiosResponse<any>>;\r\n    setFormValues: Function;\r\n    onChangeHandler: (value: any, parameter: string) => void;\r\n}\r\n\r\nconst FlatAppraiserForm = ({\r\n    getDataFromPath,\r\n    setFormValues,\r\n    onChangeHandler\r\n}: FlatAppraiserFormProps) => {\r\n    const [areas, setAreas] = useState<Area[] | null>(null);\r\n    const [selectedArea, setSelectedArea] = useState<Area | undefined>(\r\n        undefined\r\n    );\r\n    const [isNotMiddleFloor, setIsNotMiddleFloor] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        !areas &&\r\n            getDataFromPath('api/flat/areas')\r\n                .then((response) => setAreas(formatFlatAreas(response.data)))\r\n                .catch((error) => console.log(error.response.message));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormValues((prevFormValues: any) => ({\r\n            ...prevFormValues,\r\n            flat: {\r\n                ...prevFormValues.flat,\r\n                sub_area: [selectedArea ? selectedArea.id : 0]\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedArea]);\r\n\r\n    useEffect(() => {\r\n        setFormValues((prevFormValues: any) => ({\r\n            ...prevFormValues,\r\n            flat: {\r\n                ...prevFormValues.flat,\r\n                is_middle_floor: [isNotMiddleFloor ? 0 : 1]\r\n            }\r\n        }));\r\n    }, [isNotMiddleFloor, setFormValues]);\r\n\r\n    return (\r\n        <>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Общая площадь</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите общую площадь квартиры\"\r\n                        min={1}\r\n                        max={999999}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'total_space');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Жилая площадь</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите жилую площадь квартиры\"\r\n                        min={1}\r\n                        max={999999}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'living_space');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Площадь кухни</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите площадь кухни\"\r\n                        min={1}\r\n                        max={999999}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'kitchen_space');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n            <StyledFormItem>\r\n                <Label>Район</Label>\r\n                <AutoComplete\r\n                    placeholder=\"Выберите район Москвы\"\r\n                    options={areas?.map((element: Area) => ({\r\n                        value: element.name\r\n                    }))}\r\n                    filterOption\r\n                    onChange={(value: string) => {\r\n                        const newSelectedArea = areas?.find(\r\n                            (element) => element.name === value\r\n                        );\r\n                        setSelectedArea(newSelectedArea);\r\n                    }}\r\n                />\r\n            </StyledFormItem>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Пешком до ближайшей станции метро, мин</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите время до ближайшей станции метро\"\r\n                        min={1}\r\n                        max={180}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'metro_min_walk');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Расстояние до центра, км</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите расстояние до центра Москвы\"\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'kremlin_km');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n            <InlineContainer>\r\n                <StyledFormItem>\r\n                    <Label>Год постройки</Label>\r\n                    <DatePicker\r\n                        placeholder=\"Год постройки\"\r\n                        onChange={(value) => {\r\n                            value &&\r\n                                setFormValues((prevFormValues: any) => ({\r\n                                    ...prevFormValues,\r\n                                    flat: {\r\n                                        ...prevFormValues.flat,\r\n                                        build_year: [+value.year()]\r\n                                    }\r\n                                }));\r\n                        }}\r\n                        picker=\"year\"\r\n                    />\r\n                </StyledFormItem>\r\n                <StyledFormItem>\r\n                    <Label>Количество комнат</Label>\r\n                    <InputNumber\r\n                        placeholder=\"Укажите околичество комнат\"\r\n                        min={1}\r\n                        max={30}\r\n                        onChange={(value) => {\r\n                            onChangeHandler(value, 'num_room');\r\n                        }}\r\n                    />\r\n                </StyledFormItem>\r\n            </InlineContainer>\r\n            <Form.Item>\r\n                <StyledSwitch\r\n                    checked={isNotMiddleFloor}\r\n                    onChange={setIsNotMiddleFloor}\r\n                />\r\n                <SwitchLabel>\r\n                    Квартира на первом или последнем этаже\r\n                </SwitchLabel>\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nconst StyledFormItem = styled(Form.Item)`\r\n    flex: 1;\r\n    .ant-form-item-control-input-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .ant-input-number {\r\n        width: 100%;\r\n    }\r\n    .ant-select-selector,\r\n    .ant-picker,\r\n    .ant-input,\r\n    .ant-input-number {\r\n        margin-top: 6px;\r\n    }\r\n`;\r\n\r\nconst InlineContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .ant-form-item:not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nconst Label = styled.span`\r\n    font-size: 16px;\r\n`;\r\n\r\nconst SwitchLabel = styled(Label)`\r\n    margin-left: 12px;\r\n`;\r\n\r\nconst StyledSwitch = styled(Switch)`\r\n    &.ant-switch-checked {\r\n        background-color: #50b848 !important;\r\n    }\r\n`;\r\n\r\nexport default FlatAppraiserForm;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Form, Spin } from 'antd';\r\nimport axios from 'axios';\r\nimport {\r\n    Car,\r\n    Flat,\r\n    PropertyAppraiserFormMode,\r\n    PropertyAppraiserFormModeType\r\n} from '../model/types';\r\nimport CarAppraiserForm from './car-appraiser-form';\r\nimport FlatAppraiserForm from './flat-appraiser-form';\r\n\r\nconst urlConfig = require('../routes.json');\r\n\r\nconst { serverUrl } = urlConfig;\r\n\r\ninterface PropertyAppraiserFormProps {\r\n    mode: PropertyAppraiserFormModeType;\r\n}\r\n\r\nconst PropertyAppraiserForm = ({ mode }: PropertyAppraiserFormProps) => {\r\n    const [formValues, setFormValues] = useState<{ car: Car; flat: Flat }>({\r\n        car: {\r\n            brand: [0],\r\n            model: [0],\r\n            year: [0],\r\n            mileage: [0],\r\n            body_type: [0],\r\n            fuel_type: [0],\r\n            engine_volume: [0],\r\n            engine_power: [0],\r\n            transmission_type: [0],\r\n            drive_type: [0],\r\n            owners_count: [0]\r\n        },\r\n        flat: {\r\n            total_space: [0],\r\n            living_space: [0],\r\n            is_middle_floor: [0],\r\n            build_year: [0],\r\n            num_room: [0],\r\n            kitchen_space: [0],\r\n            sub_area: [0],\r\n            metro_min_walk: [0],\r\n            kremlin_km: [0]\r\n        }\r\n    });\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const [resultValue, setResultValue] = useState<number | null>(null);\r\n\r\n    const getDataFromPath = useCallback(async (path: string) => {\r\n        return axios.get(`${serverUrl}${path}`);\r\n    }, []);\r\n\r\n    const postDataToPath = useCallback((path, data) => {\r\n        return axios.post(`${serverUrl}${path}`, data);\r\n    }, []);\r\n\r\n    const onChangeHandler = useCallback((value, parameter, entity) => {\r\n        value &&\r\n            setFormValues((prevFormValues) => ({\r\n                ...prevFormValues,\r\n                [entity]: {\r\n                    ...(prevFormValues as any)[entity],\r\n                    [parameter]: [+value]\r\n                }\r\n            }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setResultValue(null);\r\n    }, [mode]);\r\n\r\n    return (\r\n        <Container>\r\n            <Form>\r\n                {mode === PropertyAppraiserFormMode.CAR ? (\r\n                    <CarAppraiserForm\r\n                        getDataFromPath={getDataFromPath}\r\n                        setFormValues={setFormValues}\r\n                        onChangeHandler={(value, parameter) =>\r\n                            onChangeHandler(value, parameter, 'car')\r\n                        }\r\n                    />\r\n                ) : (\r\n                    <FlatAppraiserForm\r\n                        getDataFromPath={getDataFromPath}\r\n                        setFormValues={setFormValues}\r\n                        onChangeHandler={(value, parameter) =>\r\n                            onChangeHandler(value, parameter, 'flat')\r\n                        }\r\n                    />\r\n                )}\r\n            </Form>\r\n            <InlineContainer>\r\n                <div>\r\n                    <Button\r\n                        style={{\r\n                            backgroundColor: '#50b848',\r\n                            borderColor: '#50b848',\r\n                            marginRight: 24\r\n                        }}\r\n                        type=\"primary\"\r\n                        onClick={() => {\r\n                            setLoading(true);\r\n                            postDataToPath(\r\n                                `api/${mode}`,\r\n                                formValues[mode]\r\n                            ).then((response) => {\r\n                                setResultValue(response.data.price);\r\n                                setLoading(false);\r\n                            });\r\n                        }}\r\n                    >\r\n                        Рассчитать стоимость\r\n                    </Button>\r\n                    <Spin spinning={isLoading} />\r\n                </div>\r\n                {resultValue && (\r\n                    <ResultWrapper>\r\n                        <span>\r\n                            {Intl.NumberFormat('ru-RU', {\r\n                                style: 'currency',\r\n                                currency: 'RUB',\r\n                                maximumFractionDigits: 0\r\n                            }).format(resultValue)}\r\n                        </span>\r\n                    </ResultWrapper>\r\n                )}\r\n            </InlineContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nconst InlineContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 16px;\r\n`;\r\n\r\nconst ResultWrapper = styled.div`\r\n    font-size: 20px;\r\n    display: flex;\r\n    white-space: pre-wrap;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport default PropertyAppraiserForm;\r\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Radio } from 'antd';\n// @ts-ignore\nimport { ReactComponent as CentInvestLogo } from '../assets/cent-invest-logo.svg';\n// @ts-ignore\nimport subHeaderImage from '../assets/subheader-image.png';\nimport PropertyAppraiserForm from './property-appraiser-form';\nimport {\n    PropertyAppraiserFormMode,\n    PropertyAppraiserFormModeType\n} from '../model/types';\n\nconst App = () => {\n    const [mode, setMode] = useState<PropertyAppraiserFormModeType>(\n        PropertyAppraiserFormMode.CAR\n    );\n\n    const onChangeHandler = useCallback((event) => {\n        setMode(event.target.value);\n    }, []);\n\n    return (\n        <Container>\n            <Header>\n                <StyledLogo />\n            </Header>\n            <SubHeader>\n                <InfoPanel>\n                    <InfoPanelTitle>СКОЛЬКО СТОИТ ... ?</InfoPanelTitle>\n                    <InfoPanelText>\n                        Выберите тип и укажите параметры имущества, а система\n                        определит его рыночную стоимость с помощью машинного\n                        обучения и анализа более 300 000 тысяч объявлений о\n                        продаже авто и 10 000 объявлений о продаже квартир.\n                    </InfoPanelText>\n                    <Radio.Group\n                        size=\"large\"\n                        defaultValue=\"car\"\n                        onChange={onChangeHandler}\n                    >\n                        <StyledRadioButton value=\"car\">\n                            Автомобиль\n                        </StyledRadioButton>\n                        <StyledRadioButton value=\"flat\">\n                            Квартира\n                        </StyledRadioButton>\n                    </Radio.Group>\n                </InfoPanel>\n                <ImageWrapper>\n                    <img src={subHeaderImage} alt=\"Расчет стоимости\" />\n                </ImageWrapper>\n            </SubHeader>\n            <FormWrapper>\n                <PropertyAppraiserForm mode={mode} />\n            </FormWrapper>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #fcfcfc;\n`;\n\nconst FormWrapper = styled.div`\n    padding: 24px 0;\n    width: 45%;\n`;\n\nconst Header = styled.div`\n    width: 100%;\n    background-color: rgba(80, 184, 72, 0.07);\n    padding-left: 84px;\n`;\n\nconst SubHeader = styled.div`\n    background-color: #fff;\n    width: 100%;\n    padding: 32px 150px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst InfoPanel = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 3;\n    padding: 0 48px;\n`;\n\nconst InfoPanelTitle = styled.span`\n    font-size: 36px;\n    font-weight: bold;\n    padding-bottom: 16px;\n`;\n\nconst InfoPanelText = styled.div`\n    padding-bottom: 24px;\n    font-size: 18px;\n`;\n\nconst ImageWrapper = styled.div`\n    flex: 2;\n    display: flex;\n    justify-content: center;\n    > img {\n        width: 50%;\n        height: auto;\n    }\n`;\n\nconst StyledLogo = styled(CentInvestLogo)`\n    width: 96px;\n    height: 96px;\n    transform: scale(1.5);\n`;\n\nconst StyledRadioButton = styled(Radio.Button)`\n    &.ant-radio-button-wrapper {\n        :hover {\n            border-color: #50b848;\n        }\n        &.ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled):hover {\n            color: #50b848;\n            border-color: #50b848;\n        }\n        &.ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled):focus-within {\n            -webkit-box-shadow: unset;\n            box-shadow: unset;\n        }\n        &.ant-radio-button-wrapper-checked:not([class*=' ant-radio-button-wrapper-disabled']).ant-radio-button-wrapper:first-child {\n            border-right-color: #50b848;\n        }\n        :not(.ant-radio-button-wrapper-disabled):hover {\n            color: #50b848;\n        }\n        .ant-radio-button-wrapper-disabled {\n            border-left-color: #d9d9d9;\n        }\n        &-checked,\n        &-checked:first-child {\n            color: #50b848;\n            border-color: #50b848;\n            &:before {\n                background-color: #50b848;\n            }\n        }\n    }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport 'antd/dist/antd.css';\nimport App from './components/app';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}